// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Computer.hdl

/**
 * The HACK computer, including CPU, ROM and RAM.
 * When reset is 0, the program stored in the computer's ROM executes.
 * When reset is 1, the execution of the program restarts. 
 * Thus, to start a program's execution, reset must be pushed "up" (1)
 * and "down" (0). From this point onward the user is at the mercy of 
 * the software. In particular, depending on the program's code, the 
 * screen may show some output and the user may be able to interact 
 * with the computer via the keyboard.
 */

CHIP Computer {

    IN reset;

    PARTS:
    // Put your code here:
    /* CPU

    input:
    	instruction: from ROM
    	inM: from Memory
    	reset: from input

	output:
		pc: pc, to ROM for next instruction
		addressM: for Memory
		writeM: for Memory
		outM: for Memory

     */
    CPU(instruction=outputROMInstruction, inM=outputMemory,
    		reset=reset, pc=pc, addressM=addressM,
    		writeM=writeM, outM=outM);

    /* ROM32K, contains instructions
    	address: contains address num from CPU's PC chip
    	out: outputROMInstruction, for CPU
    */
    ROM32K(address=pc, out=outputROMInstruction);
    
    /* Memory, handles RAM, Screen, keyboard
		in: outM, from CPU
		load: writeM, from CPU
		address: addressM, from CPU
		out: outputMemory, for CPU
    */
    Memory(in=outM, load=writeM, address=addressM, out=outputMemory);
}
